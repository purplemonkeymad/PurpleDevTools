using namespace System.Collections.Generic
<#
.SYNOPSIS
    Remove the specified <%= $Noun %> with the given <%= $IdentityPropertyName %>.
.DESCRIPTION
    A longer description of the function, its purpose, common use cases, etc.
.NOTES
    Information or caveats about the function e.g. 'This function is not supported in Linux'
.LINK
    Specify a URI to a help page, this will show when Get-Help -Online is used.
.EXAMPLE
    Test-MyTestFunction -Verbose
    Explanation of the function or its result. You can include multiple examples with additional .EXAMPLE lines
#>
function <%= $removefunctionname %> {
    Param(
        [Parameter(Mandatory,ParameterSetName='byIdentity',ValueFromPipelineByPropertyName)]
        [<%= $( $Parameters | Where-Object name -eq $IdentityPropertyName ).propertytype.fullname %>]
        $<%= $IdentityPropertyName %>
    )
    begin {
        [List[<%= $typename %>]]$currentSettings = <%= $getfunctionname %>
        if (-not $currentSettings){
            $currentSettings = [List[<%= $typename %>]]@()
        }
    }
    process {

        $removal = $false

        $objectTest = $currentSettings | Where-Object <%= $IdentityPropertyName %> -like $<%= $IdentityPropertyName %>
        if ( $objectTest ) {
            foreach ($SingleObject in $objectTest){
                [void]$currentSettings.remove($SingleObject)
                $removal = $true
            }
        }

        if (-not $removal) {
            Write-Error "The <%= $typename %> with <%= $IdentityPropertyName %>: $<%= $IdentityPropertyName %>, was not found."
        }

    }
    end {
        <%= $savefunctionname %> -InputList $currentSettings
    }
}